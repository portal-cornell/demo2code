def move_to_stack_obj_on_obj(obj_to_stack, obj_to_stack_on):
    # To stack obj_to_stack on obj_to_stack_on, the robot needs to be holding obj_to_stack
    if not is_holding(obj_to_stack):
        # If the robot is not holding obj_to_stack, there are 2 scenarios: 
        #   (1) if obj_to_stack is in a stack ,unstack obj_to_stack
        #   (2) else, pick up obj_to_stack.
        if is_in_a_stack(obj_to_stack):
            # Because obj_to_stack is in a stack, robot need to move then unstack the obj_to_stack from the obj_at_bottom first
            obj_at_bottom = get_obj_that_is_underneath(obj_at_top=obj_to_stack)
            # move then unstack: first you move to the obj_at_bottom's location, then you unstack obj_to_stack from obj_at_bottom
            move_then_unstack(obj_to_unstack=obj_to_stack, obj_at_bottom=obj_at_bottom, unstack_location=get_obj_location(obj_at_bottom))
        else:
            # move_then_pick: first you move to obj_to_stack's location, then you pick obj_to_stack up
            move_then_pick(obj=obj_to_stack, pick_location=get_obj_location(obj_to_stack))
    # determine the location of obj_to_stack_on
    obj_to_stack_on_location = get_obj_location(obj_to_stack_on)
    # move to the location of obj_to_stack_on
    move_to_location(location=obj_to_stack_on_location)