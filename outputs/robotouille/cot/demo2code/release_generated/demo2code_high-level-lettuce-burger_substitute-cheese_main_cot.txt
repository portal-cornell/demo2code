==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the robot ('robot1' is holding 'patty1') and the status of the objects ('patty1' is not at 'table1'). 
I will summarize the state trajectory into low-level actions. 
Low-level actions are not compacted enough yet because low-level actions can still be combined into high-level subtasks. 
The new trajectory will NOT be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
no
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot picked up 'patty1'.
* At state 3, the robot moved from 'table1' to 'stove2'.
* At state 4, the robot placed 'patty1' at location 'stove2'.
* At state 5-8, the robot had cooked 'patty1'.
* At state 9, the robot picked up 'patty1'.
* At state 10, the robot moved from 'stove2' to 'table3'.
* At state 11, the robot placed 'patty1' on top of 'bottom_bun1' at location 'table3'.
* At state 12, the robot moved from 'table3' to 'table7'.
* At state 13, the robot picked up 'cheese1'.
* At state 14, the robot moved from 'table7' to 'table3'.
* At state 15, the robot placed 'cheese1' on top of 'patty1' at location 'table3'.
* At state 16, the robot moved from 'table3' to 'table4'.
* At state 17, the robot picked up 'top_bun1'.
* At state 18, the robot moved from 'table4' to 'table3'.
* At state 19, the robot placed 'top_bun1' on top of 'cheese1' at location 'table3'.

==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the robot ('robot1' is holding 'patty3') and the status of the objects ('patty3' is not at 'table6'). 
I will summarize the state trajectory into low-level actions. 
Low-level actions are not compacted enough yet because low-level actions can still be combined into high-level subtasks. 
The new trajectory will NOT be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
no
[[Summarized trajectory:]]
* In [Scenario 2], at state 2, the robot picked up 'patty3'.
* At state 3, the robot moved from 'table6' to 'stove3'.
* At state 4, the robot placed 'patty3' at location 'stove3'.
* At state 5-8, the robot had cooked 'patty3'.
* At state 9, the robot picked up 'patty3'.
* At state 10, the robot moved from 'stove3' to 'table5'.
* At state 11, the robot placed 'patty3' on top of 'bottom_bun3' at location 'table5'.
* At state 12, the robot moved from 'table5' to 'table4'.
* At state 13, the robot picked up 'cheese3'.
* At state 14, the robot moved from 'table4' to 'table5'.
* At state 15, the robot placed 'cheese3' on top of 'patty3' at location 'table5'.
* At state 16, the robot moved from 'table5' to 'table9'.
* At state 17, the robot picked up 'top_bun3'.
* At state 18, the robot moved from 'table9' to 'table5'.
* At state 19, the robot placed 'top_bun3' on top of 'cheese3' at location 'table5'.

==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains low-level actions because the trajectory mentions "picked up", "moved", etc. 
I will summarize the low-level action trajectory into high-level subtasks. 
High-level subtask trajectory is the most compacted form that cannot be summarized anymore.
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2-8, the subtask is "cook patty". This subtask contains: 1. picking up 'patty1' (state 2) 2. moving to place 'patty1' on 'stove2' (state 3-4) 3. cooking 'patty1' until it is cooked (state 5-8)
* At state 9-11, the subtask is "stack patty on top of bottom bun". This subtask contains: 1. picking up 'patty1' (state 9) 2. moving to stack 'patty1' on 'bottom_bun1' (state 10-11)
* At state 12-15, the subtask is "stack cheese on top of patty". This subtask contains: 1. moving to pick up 'cheese1' (state 12-13) 2. moving to stack 'cheese1' on 'patty1' (state 14-15)
* At state 16-19, the subtask is "stack top bun on top of cheese". This subtask contains: 1. moving to pick up 'top_bun1' (state 17-18) 2. moving to stack 'top_bun1' on 'cheese1' (state 19)

==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains low-level actions because the trajectory mentions "picked up", "moved", etc. 
I will summarize the low-level action trajectory into high-level subtasks. 
High-level subtask trajectory is the most compacted form that cannot be summarized anymore.
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 2], at state 2-8, the subtask is "cook patty". This subtask contains: 1. picking up 'patty3' (state 2) 2. moving to place 'patty3' on 'stove3' (state 3-4) 3. cooking 'patty3' until it is cooked (state 5-8)
* At state 9-11, the subtask is "stack patty on top of bottom bun". This subtask contains: 1. picking up 'patty3' (state 9) 2. moving to stack 'patty3' on 'bottom_bun3' (state 10-11)
* At state 12-15, the subtask is "stack cheese on top of patty". This subtask contains: 1. moving to pick up 'cheese3' (state 12-13) 2. moving to stack 'cheese3' on 'patty3' (state 14-15)
* At state 16-19, the subtask is "stack top bun on top of cheese". This subtask contains: 1. moving to pick up 'top_bun3' (state 16-17) 2. moving to stack 'top_bun3' on 'cheese3' (state 18-19)

==========================summary -> spec==========================
[[Reasoning:]]
* In [Scenario 1]'s unique kitchen environment, the subtasks were executed in this order: ['cook patty', 'stack patty on top of bottom bun', 'stack cheese on top of patty', 'stack top bun on top of cheese'].
* In [Scenario 2]'s unique kitchen environment, the subtasks were executed in this order: ['cook patty', 'stack patty on top of bottom bun', 'stack cheese on top of patty', 'stack top bun on top of cheese'].
* Both scenarios are executing the subtasks in the same order.
* There is no repetition or loop in the subtask ordering for any individual scenario.
[[Task Specification:]]
Make a burger.

Specifically:
Get a list of all the patties in the kitchen.
Get a list of all the bottom buns in the kitchen.
Get a list of all the cheeses in the kitchen.
Get a list of all the top buns in the kitchen.

Decide a patty to use.
Get a list of all the available stoves in the kitchen.
Decide a stove to go to.
Cook that patty at that stove.

Decide a bottom bun to use.
Stack the patty on top of the bottom bun.

Decide a cheese to use.
Stack the cheese on top of the patty.

Decide a top bun to use.
Stack the top bun on top of the cheese.

