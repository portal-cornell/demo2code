==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the robot ('robot1' is at 'table13') and the status of the objects ('patty1' is not at 'table13'). 
I will summarize the state trajectory into low-level actions. 
Low-level actions are not compacted enough yet because low-level actions can still be combined into high-level subtasks. 
The new trajectory will NOT be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
no
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved from 'table19' to 'table13'.
* At state 3, the robot picked up 'patty1'.
* At state 4, the robot moved from 'table13' to 'stove1'.
* At state 5, the robot placed 'patty1' on 'stove1'.
* At state 6-9, the robot had cooked 'patty1'.
* At state 10, the robot picked up 'patty1'.
* At state 11, the robot moved from 'stove1' to 'table3'.
* At state 12, the robot placed 'patty1' on top of 'bottom_bun1' at location 'table3'.
* At state 13, the robot moved from 'table3' to 'table14'.
* At state 14, the robot picked up 'cheese1'.
* At state 15, the robot moved from 'table14' to 'table3'.
* At state 16, the robot placed 'cheese1' on top of 'patty1' at location 'table3'.
* At state 17, the robot moved from 'table3' to 'table5'.
* At state 18, the robot picked up 'top_bun1'.
* At state 19, the robot moved from 'table5' to 'table3'.
* At state 20, the robot placed 'top_bun1' on top of 'cheese1' at location 'table3'.
* At state 21, the robot moved from 'table3' to 'table19'.
* At state 22, the robot picked up 'patty2'.
* At state 23, the robot moved from 'table19' to 'stove1'.
* At state 24, the robot placed 'patty2' on 'stove1'.
* At state 25-28, the robot had cooked 'patty2'.
* At state 29, the robot picked up 'patty2'.
* At state 30, the robot moved from 'stove1' to 'table6'.
* At state 31, the robot placed 'patty2' on top of 'bottom_bun2' at location 'table6'.
* At state 32, the robot moved from 'table6' to 'table16'.
* At state 33, the robot picked up 'cheese2'.
* At state 34, the robot moved from 'table16' to 'table6'.
* At state 35, the robot placed 'cheese2' on top of 'patty2' at location 'table6'.
* At state 36, the robot moved from 'table6' to 'table7'.
* At state 37, the robot picked up 'top_bun2'.
* At state 38, the robot moved from 'table7' to 'table6'.
* At state 39, the robot placed 'top_bun2' on top of 'cheese2' at location 'table6'.

==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the robot ('robot1' is at 'table6') and the status of the objects ('patty3' is not at 'table6'). 
I will summarize the state trajectory into low-level actions. 
Low-level actions are not compacted enough yet because low-level actions can still be combined into high-level subtasks. 
The new trajectory will NOT be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
no
[[Summarized trajectory:]]
* In [Scenario 2], at state 2, the robot moved from 'table7' to 'table6'.
* At state 3, the robot picked up 'patty3'.
* At state 4, the robot moved from 'table6' to 'stove3'.
* At state 5, the robot placed 'patty3' on 'stove3'.
* At state 6-9, the robot had cooked 'patty3'.
* At state 10, the robot picked up 'patty3'.
* At state 11, the robot moved from 'stove3' to 'table3'.
* At state 12, the robot placed 'patty3' on top of 'bottom_bun3' at location 'table3'.
* At state 13, the robot moved from 'table3' to 'table8'.
* At state 14, the robot picked up 'cheese3'.
* At state 15, the robot moved from 'table8' to 'table3'.
* At state 16, the robot placed 'cheese3' on top of 'patty3' at location 'table3'.
* At state 17, the robot moved from 'table3' to 'table4'.
* At state 18, the robot picked up 'top_bun3'.
* At state 19, the robot moved from 'table4' to 'table3'.
* At state 20, the robot placed 'top_bun3' on top of 'cheese3' at location 'table3'.
* At state 21, the robot moved from 'table3' to 'table7'.
* At state 22, the robot picked up 'patty4'.
* At state 23, the robot moved from 'table7' to 'stove3'.
* At state 24, the robot placed 'patty4' on 'stove3'.
* At state 25-28, the robot had cooked 'patty4'.
* At state 29, the robot picked up 'patty4'.
* At state 30, the robot moved from 'stove3' to 'table17'.
* At state 31, the robot placed 'patty4' on top of 'bottom_bun4' at location 'table17'.
* At state 32, the robot moved from 'table17' to 'table19'.
* At state 33, the robot picked up 'cheese4'.
* At state 34, the robot moved from 'table19' to 'table17'.
* At state 35, the robot placed 'cheese4' on top of 'patty4' at location 'table17'.
* At state 36, the robot moved from 'table17' to 'table15'.
* At state 37, the robot picked up 'top_bun4'.
* At state 38, the robot moved from 'table15' to 'table17'.
* At state 39, the robot placed 'top_bun4' on top of 'cheese4' at location 'table17'.

==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains low-level actions because the trajectory mentions "moved", "picked up", etc. 
I will summarize the low-level action trajectory into high-level subtasks. 
High-level subtask trajectory is the most compacted form that cannot be summarized anymore.
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2-9, the subtask is "cook patty". This subtask contains: 1. moving to pick up 'patty1' (state 2-3) 2. moving to place 'patty1' on 'stove1' (state 4-5) 3. cooking 'patty1' until it is cooked (state 6-9)
* At state 10-12, the subtask is "stack patty on top of bottom bun". This subtask contains: 1. picking up 'patty1' (state 10) 2. moving to stack 'patty1' on 'bottom_bun1' (state 11-12)
* At state 13-16, the subtask is "stack cheese on top of patty". This subtask contains: 1. moving to pick up 'cheese1' (state 13-14) 2. moving to stack 'cheese1' on 'patty1' (state 15-16)
* At state 17-20, the subtask is "stack top bun on top of cheese". This subtask contains: 1. moving to pick up 'top_bun1' (state 18-19) 2. moving to stack 'top_bun1' on 'cheese1' (state 20)
* At state 21-28, the subtask is "cook patty". This subtask contains: 1. moving to pick up 'patty2' (state 22-23) 2. moving to place 'patty2' on 'stove1' (state 24-25) 3. cooking 'patty2' until it is cooked (state 26-28)
* At state 29-31, the subtask is "stack patty on top of bottom bun". This subtask contains: 1. picking up 'patty2' (state 29) 2. moving to stack 'patty2' on 'bottom_bun2' (state 30-31)
* At state 32-35, the subtask is "stack cheese on top of patty". This subtask contains: 1. moving to pick up 'cheese2' (state 33-34) 2. moving to stack 'cheese2' on 'patty2' (state 35)
* At state 36-39, the subtask is "stack top bun on top of cheese". This subtask contains: 1. moving to pick up 'top_bun2' (state 37-38) 2. moving to stack 'top_bun2' on 'cheese2' (state 39)

==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains low-level actions because the trajectory mentions "moved", "picked up", etc. 
I will summarize the low-level action trajectory into high-level subtasks. 
High-level subtask trajectory is the most compacted form that cannot be summarized anymore.
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 2], at state 2-9, the subtask is "cook patty". This subtask contains: 1. moving to pick up 'patty3' (state 2-3) 2. moving to place 'patty3' on 'stove3' (state 4-5) 3. cooking 'patty3' until it is cooked (state 6-9)
* At state 10-12, the subtask is "stack patty on top of bottom bun". This subtask contains: 1. picking up 'patty3' (state 10) 2. moving to stack 'patty3' on 'bottom_bun3' (state 11-12)
* At state 13-16, the subtask is "stack cheese on top of patty". This subtask contains: 1. moving to pick up 'cheese3' (state 13-14) 2. moving to stack 'cheese3' on 'patty3' (state 15-16)
* At state 17-20, the subtask is "stack top bun on top of cheese". This subtask contains: 1. moving to pick up 'top_bun3' (state 18-19) 2. moving to stack 'top_bun3' on 'cheese3' (state 20)
* At state 21-28, the subtask is "cook patty". This subtask contains: 1. moving to pick up 'patty4' (state 22-23) 2. moving to place 'patty4' on 'stove3' (state 24-25) 3. cooking 'patty4' until it is cooked (state 26-28)
* At state 29-31, the subtask is "stack patty on top of bottom bun". This subtask contains: 1. picking up 'patty4' (state 29) 2. moving to stack 'patty4' on 'bottom_bun4' (state 30-31)
* At state 32-35, the subtask is "stack cheese on top of patty". This subtask contains: 1. moving to pick up 'cheese4' (state 33-34) 2. moving to stack 'cheese4' on 'patty4' (state 35)
* At state 36-39, the subtask is "stack top bun on top of cheese". This subtask contains: 1. moving to pick up 'top_bun4' (state 37-38) 2. moving to stack 'top_bun4' on 'cheese4' (state 39)

==========================summary -> spec==========================
[[Reasoning:]]
* In [Scenario 1]'s unique kitchen environment, the subtasks were executed in this order: ['cook patty', 'stack patty on top of bottom bun', 'stack cheese on top of patty', 'stack top bun on top of cheese', 'cook patty', 'stack patty on top of bottom bun', 'stack cheese on top of patty', 'stack top bun on top of cheese'].
* In [Scenario 2]'s unique kitchen environment, the subtasks were executed in this order: ['cook patty', 'stack patty on top of bottom bun', 'stack cheese on top of patty', 'stack top bun on top of cheese', 'cook patty', 'stack patty on top of bottom bun', 'stack cheese on top of patty', 'stack top bun on top of cheese'].
* Both scenarios are executing the subtasks in the same order.
* There is no repetition or loop in the subtask ordering for any individual scenario.
[[Task Specification:]]
Make two burgers.

Specifically:
Get a list of all the patties in the kitchen.
Get a list of all the bottom buns in the kitchen.
Get a list of all the cheeses in the kitchen.
Get a list of all the top buns in the kitchen.

For two burgers, do:
  Decide a patty to use.
  Get a list of all the available stoves in the kitchen.
  Decide a stove to go to.
  Cook that patty at that stove.
  
  Decide a bottom bun to use.
  Stack the patty on top of the bottom bun.
  
  Decide a cheese to use.
  Stack the cheese on top of the patty.
  
  Decide a top bun to use.
  Stack the top bun on top of the cheese.

