==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the robot ('robot1' is at 'table13') and the status of the objects ('patty1' is not at 'table13'). 
I will summarize the state trajectory into low-level actions. 
Low-level actions are not compacted enough yet because low-level actions can still be combined into high-level subtasks. 
The new trajectory will NOT be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
no
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved from 'table19' to 'table13'.
* At state 3, the robot picked up 'patty1'.
* At state 4, the robot moved from 'table13' to 'stove1'.
* At state 5, the robot placed 'patty1' at location 'stove1'.
* At state 6-9, the robot had cooked 'patty1'.
* At state 10, the robot moved from 'stove1' to 'table19'.
* At state 11, the robot picked up 'patty2'.
* At state 12, the robot moved from 'table19' to 'stove2'.
* At state 13, the robot placed 'patty2' at location 'stove2'.
* At state 14-17, the robot had cooked 'patty2'.

==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the robot ('robot1' is at 'table6') and the status of the objects ('patty3' is not at 'table6'). 
I will summarize the state trajectory into low-level actions. 
Low-level actions are not compacted enough yet because low-level actions can still be combined into high-level subtasks. 
The new trajectory will NOT be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
no
[[Summarized trajectory:]]
* In [Scenario 2], at state 2, the robot moved from 'table7' to 'table6'. 
* At state 3, the robot picked up 'patty3'.
* At state 4, the robot moved from 'table6' to 'stove3'.
* At state 5, the robot placed 'patty3' at location 'stove3'.
* At state 6-9, the robot had cooked 'patty3'.
* At state 10, the robot moved from 'stove3' to 'table7'.
* At state 11, the robot picked up 'patty4'.
* At state 12, the robot moved from 'table7' to 'stove4'.
* At state 13, the robot placed 'patty4' at 'stove4'.
* At state 14-17, the robot had cooked 'patty4'.

==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains low-level actions because the trajectory mentions "moved", "picked up", etc. 
I will summarize the low-level action trajectory into high-level subtasks. 
High-level subtask trajectory is the most compacted form that cannot be summarized anymore.
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2-9, the subtask is "cook patty". This subtask contains: 1. moving to pick up 'patty1' (state 2-3) 2. moving to place 'patty1' on 'stove1' (state 4-5) 3. cooking 'patty1' until it is cooked (state 6-9)
* At state 10-17, the subtask is "cook patty". This subtask contains: 1. moving to pick up 'patty2' (state 10-11) 2. moving to place 'patty2' on 'stove2' (state 12-13) 3. cooking 'patty2' until it is cooked (state 14-17)

==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains low-level actions because the trajectory mentions "moved", "picked up", etc. 
I will summarize the low-level action trajectory into high-level subtasks. 
High-level subtask trajectory is the most compacted form that cannot be summarized anymore.
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 2], at state 2-9, the subtask is "cook patty". This subtask contains: 1. moving to pick up 'patty3' (state 2-3) 2. moving to place 'patty3' on 'stove3' (state 4-5) 3. cooking 'patty3' until it is cooked (state 6-9)
* At state 10-17, the subtask is "cook patty". This subtask contains: 1. moving to pick up 'patty4' (state 10-11) 2. moving to place 'patty4' on 'stove4' (state 12-13) 3. cooking 'patty4' until it is cooked (state 14-17)

==========================summary -> spec==========================
[[Reasoning:]]
* In [Scenario 1]'s unique kitchen environment, the subtasks were executed in this order: ['cook patty', 'cook patty'].
* In [Scenario 2]'s unique kitchen environment, the subtasks were executed in this order: ['cook patty', 'cook patty'].
* Both scenarios are executing the subtasks in the same order.
* In both scenarios, we see that the subset ['cook patty'] got repeated 2 times consecutively, so we can use a for-loop in our specification. 
[[Task Specification:]]
Specifically:
Get a list of all the patties in the kitchen.

For two patties, do:
  Decide a patty to use.
  Get a list of all the available stoves in the kitchen.
  Decide a stove to go to.
  Cook that patty at that stove.

