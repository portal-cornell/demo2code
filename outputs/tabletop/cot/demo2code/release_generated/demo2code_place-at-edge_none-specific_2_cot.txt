==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the object ('brown cylinder' has moved). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot picked up and placed 'brown cylinder' at 'right edge'.

==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the object ('brown cylinder' has moved). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 2], at state 2, the robot picked up and placed 'brown cylinder' at 'left edge'.

==========================summary -> spec==========================
[[Reasoning:]]
Because two scenarios have two different edges ('right edge', 'left edge'), we assume that the 'brown cylinder' can be placed at any random edge. 
[[Task Specification:]]
Place the brown cylinder at any random edge.

