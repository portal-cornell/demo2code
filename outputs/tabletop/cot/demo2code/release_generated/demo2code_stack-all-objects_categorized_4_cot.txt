==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the objects ('orange block' has moved). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved 'orange block'.
* At state 3, the robot picked up and placed 'brown block' on top of 'orange block'. 
* At state 4, the robot picked up and placed 'pink block' on top of 'brown block'.
* At state 5, the robot picked up and placed 'green block' on top of 'pink block'.
* At state 6, the robot moved 'brown cylinder'.
* At state 7, the robot picked up and placed 'cyan cylinder' on top of 'brown cylinder'. 
* At state 8, the robot picked up and placed 'blue cylinder' on top of 'cyan cylinder'.

==========================summary -> spec==========================
[[Reasoning:]]
Because the task is "Stack all objects into two stacks, and objects may need to be categorized in the stacks", we focus on whether the objects are stacked by type.

Based on States 2-5, in the first stack, the blocks from bottom to top is ['orange block', 'brown block', 'pink block', 'green block'].
Based on States 6-8, in the second stack, the cylinders from bottom to top is ['brown cylinder', 'cyan cylinder', 'blue cylinder'].

Because the blocks and cylinders are stacked separately, we assume that the objects need to be categorized in the stacks.
[[Task Specification:]]
Stack all blocks into one stack and all cylinders into another stack.

