==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the objects ('cyan block' is behind 'blue block'). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved 'cyan block' behind 'blue block'.
* At state 3, the robot picked up and placed 'purple block' on top of 'cyan block'. 
* At state 4, the robot picked up and placed 'green block' on top of 'purple block'.
* At state 5, the robot picked up and placed 'blue block' on top of 'green block'. 
* At state 6, the robot moved 'pink cylinder'.
* At state 7, the robot picked up and placed 'orange cylinder' on top of 'pink cylinder'. 
* At state 8, the robot picked up and placed 'purple cylinder' on top of 'orange cylinder'.

==========================summary -> spec==========================
[[Reasoning:]]
Because the task is "Stack all objects into two stacks, and objects may need to be categorized in the stacks", we focus on whether the objects are stacked by type.

Based on States 2-5, in the first stack, the blocks from bottom to top is ['cyan block', 'purple block', 'green block', 'blue block'].
Based on States 6-8, in the second stack, the cylinders from bottom to top is ['pink cylinder', 'orange cylinder', 'purple cylinder'].

Because the blocks and cylinders are stacked separately, we assume that the objects need to be categorized in the stacks.
[[Task Specification:]]
Stack all blocks into one stack and all cylinders into another stack.

