==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the objects ('cyan block' is to the left of 'yellow cylinder'). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved 'yellow cylinder'.
* At state 3, the robot picked up and placed 'purple cylinder' on top of 'yellow cylinder'. 
* At state 4, the robot picked up and placed 'yellow block' on top of 'purple cylinder'. 
* At state 5, the robot picked up and placed 'cyan block' on top of 'yellow block'.
* At state 6, the robot moved 'gray cylinder'.
* At state 7, the robot picked up and placed 'pink block' on top of 'gray cylinder'. 
* At state 8, the robot picked up and placed 'pink cylinder' on top of 'pink block'. 
* At state 9, the robot picked up and placed 'orange block' on top of 'pink cylinder'.

==========================summary -> spec==========================
[[Reasoning:]]
Because the task is "Stack all objects into two stacks, and objects may need to be categorized in the stacks", we focus on whether the objects are stacked by type.

Based on States 2-5, in the first stack, the blocks from bottom to top is ['yellow cylinder', 'purple cylinder', 'yellow block', 'cyan block'].
Based on States 6-9, in the first stack, the blocks from bottom to top is ['gray cylinder', 'pink block', 'pink cylinder', 'orange block'].

Because each stack has both blocks and cylinders, we assume that it doesn't matter whether the objects are categorized.
[[Task Specification:]]
Stack all objects into two stacks. It doesn't matter whether the objects are categorized.

