==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the objects ('orange cylinder' has moved). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved 'orange cylinder'.
* At state 3, the robot picked up and placed 'brown cylinder' on top of 'orange cylinder'. 
* At state 4, the robot picked up and placed 'yellow cylinder' on top of 'brown cylinder'. 
* At state 5, the robot picked up and placed 'cyan cylinder' on top of 'yellow cylinder'.
* At state 6, the robot moved 'red block'.
* At state 7, the robot picked up and placed 'purple block' on top of 'red block'. 
* At state 8, the robot picked up and placed 'blue block' on top of 'purple block'.

==========================summary -> spec==========================
[[Reasoning:]]
Because the task is "Stack all objects into two stacks, and objects may need to be categorized in the stacks", we focus on whether the objects are stacked by type.

Based on States 2-5, in the first stack, the cylinders from bottom to top is ['orange cylinder', 'brown cylinder', 'yellow cylinder', 'cyan cylinder'].
Based on States 6-8, in the second stack, the blocks from bottom to top is ['red block', 'purple block', 'blue block'].

Because the cylinders and blocks are stacked separately, we assume that the objects need to be categorized in the stacks.
[[Task Specification:]]
Stack all cylinders into one stack and all blocks into another stack.

