==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the objects ('gray cylinder' is to the right of 'cyan cylinder'). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved 'cyan cylinder'.
* At state 3, the robot picked up and placed 'yellow block' on top of 'cyan cylinder'. 
* At state 4, the robot picked up and placed 'yellow cylinder' on top of 'yellow block'.
* At state 5, the robot picked up and placed 'brown cylinder' on top of 'yellow cylinder'.
* At state 6, the robot moved 'blue block'.
* At state 7, the robot picked up and placed 'gray cylinder' on top of 'blue block'. 
* At state 8, the robot picked up and placed 'brown block' on top of 'gray cylinder'.

==========================summary -> spec==========================
[[Reasoning:]]
Because the task is "Stack all objects into two stacks, and objects may need to be categorized in the stacks", we focus on whether the objects are stacked by type.

Based on States 2-5, in the first stack, the blocks from bottom to top is ['cyan cylinder', 'yellow block', 'yellow cylinder', 'brown cylinder'].
Based on States 6-8, in the first stack, the blocks from bottom to top is ['blue block', 'gray cylinder', 'brown block'].

Because each stack has both blocks and cylinders, we assume that it doesn't matter whether the objects are categorized.
[[Task Specification:]]
Stack all objects into two stacks. It doesn't matter whether the objects are categorized.

