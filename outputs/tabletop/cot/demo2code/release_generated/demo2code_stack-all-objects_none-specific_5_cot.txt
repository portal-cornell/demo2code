==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the objects ('blue block' is not on top of 'table'). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved 'green block'.
* At state 3, the robot picked up and placed 'blue block' on top of 'green block'. 
* At state 4, the robot picked up and placed 'gray block' on top of 'blue block'.
* At state 5, the robot moved 'brown block'.
* At state 6, the robot picked up and placed 'brown cylinder' on top of 'brown block'. 
* At state 7, the robot picked up and placed 'blue cylinder' on top of 'brown cylinder'.

==========================summary -> spec==========================
[[Reasoning:]]
Because the task is "Stack all objects into two stacks, and objects may need to be categorized in the stacks", we focus on whether the objects are stacked by type.

Based on States 2-4, in the first stack, the blocks from bottom to top is ['green block', 'blue block', 'gray block'].
Based on States 5-7, in the second stack, the blocks from bottom to top is ['brown block', 'brown cylinder', 'blue cylinder'].

Because each stack has both blocks and cylinders, we assume that it doesn't matter whether the objects are categorized.
[[Task Specification:]]
Stack all objects into two stacks. It doesn't matter whether the objects are categorized.

