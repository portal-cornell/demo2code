==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the objects ('red cylinder' is not on top of 'table'). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved 'green cylinder'.
* At state 3, the robot picked up and placed 'red cylinder' on top of 'green cylinder'. 
* At state 4, the robot picked up and placed 'cyan block' on top of 'red cylinder'. 
* At state 5, the robot picked up and placed 'orange block' on top of 'cyan block'.
* At state 6, the robot moved 'green block' and placed it behind 'brown cylinder'.
* At state 7, the robot picked up and placed 'red block' on top of 'green block'. 
* At state 8, the robot moved 'brown cylinder' and placed it on top of 'green block' and 'red block'.
* At state 9, the robot picked up and placed 'pink cylinder' on top of 'green block', 'red block', and 'brown cylinder'.

==========================summary -> spec==========================
[[Reasoning:]]
Because the task is "Stack all objects into two stacks, and objects may need to be categorized in the stacks", we focus on whether the objects are stacked by type.

Based on States 2-5, in the first stack, the objects from bottom to top are ['green cylinder', 'red cylinder', 'cyan block', 'orange block'].
Based on States 6-9, in the second stack, the objects from bottom to top are ['green block', 'red block', 'brown cylinder', 'pink cylinder'].

Because each stack has both blocks and cylinders, we assume that it doesn't matter whether the objects are categorized.
[[Task Specification:]]
Stack all objects into two stacks. It doesn't matter whether the objects are categorized.

