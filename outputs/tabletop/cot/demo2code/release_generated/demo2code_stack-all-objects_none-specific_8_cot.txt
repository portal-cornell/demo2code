==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the objects ('brown block' is not on top of 'table'). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved 'orange cylinder'.
* At state 3, the robot picked up and placed 'brown block' on top of 'orange cylinder'. 
* At state 4, the robot picked up and placed 'blue cylinder' on top of 'brown block'.
* At state 5, the robot picked up and placed 'red cylinder' on top of 'blue cylinder'.
* At state 6, the robot moved 'cyan cylinder'.
* At state 7, the robot picked up and placed 'cyan block' on top of 'cyan cylinder'. 
* At state 8, the robot picked up and placed 'gray block' on top of 'cyan block'. 
* At state 9, the robot picked up and placed 'purple block' on top of 'gray block'.

==========================summary -> spec==========================
[[Reasoning:]]
Because the task is "Stack all objects into two stacks, and objects may need to be categorized in the stacks", we focus on whether the objects are stacked by type.

Based on States 2-5, in the first stack, the blocks from bottom to top is ['orange cylinder', 'brown block', 'blue cylinder', 'red cylinder'].
Based on States 6-9, in the second stack, the blocks from bottom to top is ['cyan cylinder', 'cyan block', 'gray block', 'purple block'].

Because each stack has both blocks and cylinders, and the objects are categorized in the stacks, we assume that the objects need to be stacked by type.
[[Task Specification:]]
Stack all objects into two stacks, where objects need to be categorized in the stacks.

