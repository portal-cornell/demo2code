==========================summarizing demo==========================
[[Reasoning:]]
The input trajectory contains state predicates because the trajectory talks about the status of the objects ('red cylinder' is on top of 'green cylinder'). 
I will summarize the state trajectory into low-level actions.
The low-level actions are the most compact form, so I should stop summarizing after this. 
The new trajectory will be sufficiently summarized.
[[Is the new trajectory sufficiently summarized? (yes/no):]]
yes
[[Summarized trajectory:]]
* In [Scenario 1], at state 2, the robot moved 'green cylinder'.
* At state 3, the robot picked up and placed 'red cylinder' on top of 'green cylinder'. 
* At state 4, the robot picked up and placed 'yellow block' on top of 'red cylinder'. 
* At state 5, the robot picked up and placed 'pink cylinder' on top of 'yellow block'.
* At state 6, the robot moved 'yellow cylinder'.
* At state 7, the robot picked up and placed 'brown block' on top of 'yellow cylinder'. 
* At state 8, the robot picked up and placed 'purple block' on top of 'brown block'.

==========================summary -> spec==========================
[[Reasoning:]]
Because the task is "Stack all objects into two stacks, and objects may need to be categorized in the stacks", we focus on whether the objects are stacked by type.

Based on States 2-5, in the first stack, the blocks from bottom to top is ['green cylinder', 'red cylinder', 'yellow block', 'pink cylinder'].
Based on States 6-8, in the second stack, the blocks from bottom to top is ['yellow cylinder', 'brown block', 'purple block'].

Because each stack has different types of objects, we assume that the objects need to be categorized in the stacks.
[[Task Specification:]]
Stack all objects into two stacks, categorizing the objects by type.

